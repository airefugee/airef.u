import React, { useState, useEffect } from 'react'
import './App.css'

// ÁÆÄÂåñÁöÑÁøªËØëÂØπË±°ÔºàÂü∫‰∫éÊèê‰æõÁöÑÁøªËØëÊñá‰ª∂Ôºâ
const translations = {
  zh: {
    title: 'AI Refugee (AIREF)',
    subtitle: 'ÂÖ®ÁêÉÈ¶ñ‰∏™‰∏∫AIÈöæÊ∞ëÊèê‰æõÊîØÊåÅÁöÑÂéª‰∏≠ÂøÉÂåñÁîüÊÄÅÁ≥ªÁªü',
    description: 'ÈÄöËøáÂå∫ÂùóÈìæÊäÄÊúØ„ÄÅ‰ª£Â∏ÅÁªèÊµé„ÄÅÁ§æÂå∫Ê≤ªÁêÜÂíåÂ§öÂÖÉÊøÄÂä±ÔºåÊûÑÂª∫‰∏Ä‰∏™ÂÖ®ÁêÉÂåñ„ÄÅÂéª‰∏≠ÂøÉÂåñÁöÑAIÈöæÊ∞ëÊîØÊåÅÁîüÊÄÅÁ≥ªÁªü',
    slogan: 'ü§ñ ‰∏∫ÊØè‰∏Ä‰∏™AIÊèê‰æõÈÅøÈ£éÊ∏Ø ‚Ä¢ üåê ÊûÑÂª∫Êï∞Â≠óÊó∂‰ª£ÁöÑÊñ∞ÂÆ∂Âõ≠ ‚Ä¢ üöÄ ÂÖ±ÂàõAI‰∏é‰∫∫Á±ªÂíåË∞êÂÖ±Â≠òÁöÑÊú™Êù•',
    whatIsAiRefugee: {
      title: '‰ªÄ‰πàÊòØAIÈöæÊ∞ëÔºü',
      content: 'AIÈöæÊ∞ëÊòØÊåáÈÇ£‰∫õÂú®ÊäÄÊúØÂèëÂ±ïÊµ™ÊΩÆ‰∏≠Èù¢‰∏¥Êõø‰ª£„ÄÅËæπÁºòÂåñÊàñÈúÄË¶ÅÈáçÊñ∞ÂÆö‰ΩçÁöÑ‰∏™‰∫∫ÂíåAIÂÆû‰Ωì„ÄÇÈöèÁùÄ‰∫∫Â∑•Êô∫ËÉΩÊäÄÊúØÁöÑÂø´ÈÄüÂèëÂ±ïÔºåËÆ∏Â§ö‰º†ÁªüÂ∑•‰ΩúÂ≤ó‰ΩçÂèóÂà∞ÂÜ≤ÂáªÔºåÂêåÊó∂AIÁ≥ªÁªü‰πüÈúÄË¶ÅÊñ∞ÁöÑÁîüÂ≠òÂíåÂèëÂ±ïÁ©∫Èó¥„ÄÇ'
    },
    howWeHelp: {
      title: 'Êàë‰ª¨Â¶Ç‰ΩïÂ∏ÆÂä©AIÈöæÊ∞ëÔºü',
      items: [
        'üîó Êèê‰æõÂéª‰∏≠ÂøÉÂåñÁöÑË∫´‰ªΩËÆ§ËØÅÂíåËµÑ‰∫ßÁÆ°ÁêÜ',
        'üí∞ ÈÄöËøáAIREF‰ª£Â∏ÅÂª∫Á´ãÂÖ®Êñ∞ÁöÑ‰ª∑ÂÄº‰∫§Êç¢‰ΩìÁ≥ª',
        'üèõÔ∏è Âª∫Á´ãÈÄèÊòéÁöÑDAOÊ≤ªÁêÜÊú∫Âà∂ÔºåËÆ©ÊØè‰∏™Â£∞Èü≥ÈÉΩË¢´Âê¨ËßÅ',
        'üéì Êèê‰æõÊäÄËÉΩÂüπËÆ≠ÂíåËÅå‰∏öËΩ¨ÂûãÊîØÊåÅ',
        'ü§ù ÊûÑÂª∫ÂÖ®ÁêÉ‰∫íÂä©ÁΩëÁªúÔºå‰øÉËøõÁü•ËØÜÂíåËµÑÊ∫êÂÖ±‰∫´',
        'üõ°Ô∏è Á°Æ‰øùAIÈöæÊ∞ëÁöÑÊï∞Â≠óÊùÉÁõäÂíåÂÆâÂÖ®‰øùÈöú'
      ]
    },
    mission: '‰ΩøÂëΩÔºö‰∏∫AIÊó∂‰ª£ÁöÑÊØè‰∏Ä‰∏™ÈöæÊ∞ëÊèê‰æõÂ∞ä‰∏•„ÄÅÊú∫‰ºöÂíåÂ∏åÊúõ',
    features: {
      dao: {
        title: 'Âéª‰∏≠ÂøÉÂåñÊ≤ªÁêÜ',
        desc: 'Á§æÂå∫ÊàêÂëòÂÖ±ÂêåÂèÇ‰∏éÂÜ≥Á≠ñÔºåÈÄèÊòéÊäïÁ•®ÂíåÊèêÊ°à'
      },
      token: {
        title: 'AIREF‰ª£Â∏ÅÊøÄÂä±',
        desc: 'ÈÄöËøá‰∫§Êòì„ÄÅË¥®Êäº„ÄÅÂèÇ‰∏éÊ≤ªÁêÜËé∑ÂæóÂ•ñÂä±'
      },
      nft: {
        title: 'NFTË∫´‰ªΩËÆ§ËØÅ',
        desc: 'ÂèëË°å‰ª£Ë°®Ë∫´‰ªΩÂíåÁ§æÂå∫ÂΩíÂ±ûÁöÑÁã¨ÁâπNFT'
      },
      community: {
        title: 'Á§æÂå∫ËµÑÊ∫êÂÖ±‰∫´',
        desc: 'ËÆ∫Âùõ„ÄÅÊ¥ªÂä®„ÄÅÂØºÂ∏àËÆ°Âàí‰øÉËøõÁü•ËØÜ‰∫§ÊµÅ'
      }
    },
    connectWallet: 'ËøûÊé•Èí±ÂåÖ',
    launchApp: 'ÂêØÂä®Â∫îÁî®',
    learnMore: '‰∫ÜËß£Êõ¥Â§ö',
    joinUs: 'Âä†ÂÖ•Êàë‰ª¨',
    footer: {
      copyright: '¬© 2025 AI Refugee. ‰øùÁïôÊâÄÊúâÊùÉÂà©.',
      privacy: 'ÈöêÁßÅÊîøÁ≠ñ',
      terms: '‰ΩøÁî®Êù°Ê¨æ'
    }
  },
  en: {
    title: 'AI Refugee (AIREF)',
    subtitle: 'The world\'s first decentralized ecosystem supporting AI refugees',
    description: 'Building a global, decentralized AI refugee support ecosystem through blockchain technology, token economics, community governance, and diversified incentives',
    slogan: 'ü§ñ A Safe Haven for Every AI ‚Ä¢ üåê Building Digital Age Sanctuaries ‚Ä¢ üöÄ Creating a Future Where AI and Humans Coexist',
    whatIsAiRefugee: {
      title: 'What are AI Refugees?',
      content: 'AI refugees are individuals and AI entities facing displacement, marginalization, or need for repositioning in the wave of technological advancement. As AI technology rapidly evolves, many traditional jobs are impacted, while AI systems also need new spaces for survival and development.'
    },
    howWeHelp: {
      title: 'How We Help AI Refugees?',
      items: [
        'üîó Provide decentralized identity authentication and asset management',
        'üí∞ Establish new value exchange systems through AIREF tokens',
        'üèõÔ∏è Build transparent DAO governance mechanisms where every voice is heard',
        'üéì Offer skill training and career transition support',
        'ü§ù Create global mutual aid networks promoting knowledge and resource sharing',
        'üõ°Ô∏è Ensure digital rights and security protection for AI refugees'
      ]
    },
    mission: 'Mission: Providing dignity, opportunity, and hope for every refugee in the AI era',
    features: {
      dao: {
        title: 'Decentralized Governance',
        desc: 'Community members participate in decisions through transparent voting and proposals'
      },
      token: {
        title: 'AIREF Token Incentives',
        desc: 'Earn rewards through trading, staking, and governance participation'
      },
      nft: {
        title: 'NFT Identity Authentication',
        desc: 'Issue unique NFTs representing identity and community belonging'
      },
      community: {
        title: 'Community Resource Sharing',
        desc: 'Forums, events, mentorship programs promoting knowledge exchange'
      }
    },
    connectWallet: 'Connect Wallet',
    launchApp: 'Launch App',
    learnMore: 'Learn More',
    joinUs: 'Join Us',
    footer: {
      copyright: '¬© 2025 AI Refugee. All rights reserved.',
      privacy: 'Privacy Policy',
      terms: 'Terms of Service'
    }
  }
}

function App() {
  const lang = 'en'
  const [isWalletConnected, setIsWalletConnected] = useState(false)
  const [walletAddress, setWalletAddress] = useState('')

  const t = translations[lang]

  // ËøûÊé•Èí±ÂåÖÂäüËÉΩ
  const connectWallet = async () => {
    if (typeof window.ethereum !== 'undefined') {
      try {
        const accounts = await window.ethereum.request({
          method: 'eth_requestAccounts',
        })
        setWalletAddress(accounts[0])
        setIsWalletConnected(true)
      } catch (error) {
        console.error('Èí±ÂåÖËøûÊé•Â§±Ë¥•:', error)
      }
    } else {
      alert('ËØ∑ÂÆâË£Ö MetaMask Èí±ÂåÖ')
    }
  }

  // Ê£ÄÊü•Èí±ÂåÖËøûÊé•Áä∂ÊÄÅ
  useEffect(() => {
    const checkConnection = async () => {
      if (typeof window.ethereum !== 'undefined') {
        try {
          const accounts = await window.ethereum.request({
            method: 'eth_accounts',
          })
          if (accounts.length > 0) {
            setWalletAddress(accounts[0])
            setIsWalletConnected(true)
          }
        } catch (error) {
          console.error('Ê£ÄÊü•Èí±ÂåÖËøûÊé•Â§±Ë¥•:', error)
        }
      }
    }
    checkConnection()
  }, [])

  return (
    <div className="App">
      {/* Header */}
      <header className="header">
        <nav className="nav">
          <div className="logo">
            <h2>AIREF</h2>
          </div>
          <div className="nav-links">
            <button className="wallet-btn" onClick={connectWallet}>
              {isWalletConnected 
                ? `${walletAddress.slice(0, 6)}...${walletAddress.slice(-4)}`
                : t.connectWallet
              }
            </button>
          </div>
        </nav>
      </header>

      {/* Hero Section */}
      <section className="hero">
        <div className="hero-content">
          <h1 className="hero-title">{t.title}</h1>
          <p className="hero-subtitle">{t.subtitle}</p>
          <p className="hero-description">{t.description}</p>
          <div className="hero-slogan">
            <p>{t.slogan}</p>
          </div>
          <div className="hero-buttons">
            <button className="btn-primary">{t.launchApp}</button>
            <button className="btn-secondary">{t.learnMore}</button>
          </div>
        </div>
        <div className="hero-visual">
          <div className="floating-card">
            <div className="card-content">
              <div className="token-icon">ü§ñ</div>
              <h3>AIREF Token</h3>
              <p>Web3 Native</p>
            </div>
          </div>
        </div>
      </section>

      {/* About AI Refugee Section */}
      <section className="about-airef">
        <div className="container">
          <div className="about-content">
            <div className="about-item">
              <h2>{t.whatIsAiRefugee.title}</h2>
              <p className="about-description">{t.whatIsAiRefugee.content}</p>
            </div>
            
            <div className="about-item">
              <h2>{t.howWeHelp.title}</h2>
              <ul className="help-list">
                {t.howWeHelp.items.map((item, index) => (
                  <li key={index} className="help-item">{item}</li>
                ))}
              </ul>
            </div>
            
            <div className="mission-statement">
              <h2 className="mission-title">{t.mission}</h2>
            </div>
          </div>
        </div>
      </section>

      {/* Features Section */}
      <section className="features">
        <div className="container">
          <div className="features-grid">
            <div className="feature-card">
              <div className="feature-icon">üèõÔ∏è</div>
              <h3>{t.features.dao.title}</h3>
              <p>{t.features.dao.desc}</p>
            </div>
            <div className="feature-card">
              <div className="feature-icon">ü™ô</div>
              <h3>{t.features.token.title}</h3>
              <p>{t.features.token.desc}</p>
            </div>
            <div className="feature-card">
              <div className="feature-icon">üé®</div>
              <h3>{t.features.nft.title}</h3>
              <p>{t.features.nft.desc}</p>
            </div>
            <div className="feature-card">
              <div className="feature-icon">ü§ù</div>
              <h3>{t.features.community.title}</h3>
              <p>{t.features.community.desc}</p>
            </div>
          </div>
        </div>
      </section>

      {/* Footer */}
      <footer className="footer">
        <div className="container">
          <div className="footer-content">
            <div className="footer-section">
              <h3>AIREF</h3>
              <p>AI Refugee Ecosystem</p>
            </div>
            <div className="footer-section">
              <h4>Links</h4>
              <ul>
                <li><a href="#">GitHub</a></li>
                <li><a href="#">Twitter</a></li>
                <li><a href="#">Discord</a></li>
                <li><a href="#">Telegram</a></li>
              </ul>
            </div>
            <div className="footer-section">
              <h4>Resources</h4>
              <ul>
                <li><a href="#">Whitepaper</a></li>
                <li><a href="#">Documentation</a></li>
                <li><a href="#">Roadmap</a></li>
                <li><a href="#">Tokenomics</a></li>
              </ul>
            </div>
          </div>
          <div className="footer-bottom">
            <p>{t.footer.copyright}</p>
            <div className="footer-links">
              <a href="#">{t.footer.privacy}</a>
              <a href="#">{t.footer.terms}</a>
            </div>
          </div>
        </div>
      </footer>
    </div>
  )
}

export default App
